name: Deploy resource using Cloudformation stacks

on: push

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

jobs:
  check:
    runs-on: ubuntu-latest
    container: python:3.8
    steps:
    - name: Chekout code
      uses: actions/checkout@v4
    - name: Install dependencies
      run: pip install awscli cfn-lint
    - name: Validate & lint template
      run: |
        git diff --name-only HEAD~1..HEAD | grep 'template.yaml' | while read line; do
          DIR=$(dirname "$line")
          aws cloudformation validate-template --template-body file://$DIR/template.yaml
          cfn-lint -I $DIR/template.yaml
        done
  scans:
    runs-on: ubuntu-latest
    needs: check
    steps:
    - name: Terrascan scan
      uses: tenable/terrascan-action@main
    - name: Checkov scan
      uses: bridgecrewio/checkov-action@v12
  deploy:
    needs: [check, scans]
    runs-on: ubuntu-latest
    container: python:3.8
    steps:
    - name: Chekout code
      uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        pip install awscli
        apt-get update && apt-get install gettext-base jq -y
    - name: Deploy
      run: |
        for dir in $(git diff --dirstat=files,0 HEAD~1 | awk '{print $2}'); do 
          TEMPLATE_DIR=$(basename $dir); 
          STACK_NAME=$BITBUCKET_BRANCH-stack-$TEMPLATE_DIR;
          PARAMETERS=$(jq -r '.[] | .ParameterValue |= (env[.[1:]] // .) | [.ParameterKey, .ParameterValue] | join("=")' $TEMPLATE_DIR/$BITBUCKET_BRANCH-parameters.json)
          echo "START DEPLOYING $STACK_NAME"
          aws cloudformation deploy --stack-name $STACK_NAME --template-file=$TEMPLATE_DIR/template.yaml --parameter-overrides $PARAMETERS; 
        done
