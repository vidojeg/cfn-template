name: Deploy resource using Cloudformation stacks

on: push

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

jobs:
  check:
    name: Checkout, Lint and Security Scans
    runs-on: ubuntu-latest
    steps:
    - name: Chekout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - name: Install dependencies
      run: pip install awscli cfn-lint
    - name: Validate & lint template
      run: |
        ls -laht
        git diff --name-only HEAD~1..HEAD | grep 'template.yaml' | while read line; do
          DIR=$(dirname "$line")
          aws cloudformation validate-template --template-body file://$DIR/template.yaml
          cfn-lint -I $DIR/template.yaml
        done
  scans:
    name: Security scans
    runs-on: ubuntu-latest
    needs: check
    steps:
    - name: Chekout code
      uses: actions/checkout@v4
    - name: Checkov scan
      uses: bridgecrewio/checkov-action@v12
      with:
        output_format: cli
        output_file_path: console
        framework: cloudformation
        quiet: true
        soft_fail: true
    - name: Run Trivy vulnerability scanner in IaC mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        hide-progress: false
        format: 'table'
        output: 'trivy-results.sarif'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH,MEDIUM'
  deploy:
    name: Deploy Cloudformation Stack
    runs-on: ubuntu-latest
    needs: scans
    if: contains(' refs/heads/dev refs/heads/stage refs/heads/prod ', github.ref)
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - name: Install dependencies
      run: |
        pip install awscli
    - name: Deploy Stack
      run: |
        for dir in $(git diff --dirstat=files,0 HEAD~1 | awk '{print $2}'); do
          TEMPLATE_DIR=$(basename $dir);
          STACK_NAME=$GITHUB_REF_NAME-stack-$TEMPLATE_DIR;
          echo "START DEPLOYING $STACK_NAME"
          aws cloudformation deploy --stack-name $STACK_NAME --template-file=$TEMPLATE_DIR/template.yaml --parameter-overrides file://$TEMPLATE_DIR/$GITHUB_REF_NAME-parameters.json;
        done

